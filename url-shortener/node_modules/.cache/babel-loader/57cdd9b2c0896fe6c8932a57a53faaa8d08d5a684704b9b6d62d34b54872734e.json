{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chris\\\\Documents\\\\GitHub\\\\url-shortener\\\\url-shortener\\\\src\\\\components\\\\Form.js\";\nimport React from \"react\";\nimport { nanoid } from 'nanoid';\nimport { getDatabase, child, ref, set, get } from \"firebase/database\";\nimport { isWebUri } from 'valid-url';\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\n\n// Define the Form component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Form extends React.Component {\n  // Initialize state and bind methods in the constructor\n  constructor(props) {\n    super(props);\n    // Method to handle form submission\n    this.onSubmit = async event => {\n      event.preventDefault(); // Prevents the page from reloading when submit is clicked\n\n      this.setState({\n        loading: true,\n        // Set loading flag to true while processing\n        generatedURL: '' // Clear any previously generated URL\n      });\n\n      // Validate the input the user has submitted\n      var isFormValid = await this.validateInput();\n      if (!isFormValid) {\n        return; // If validation fails, exit the method\n      }\n\n      // If the user has input a preferred alias then we use it, if not, we generate one\n      var generatedKey = nanoid(5); // Generate a random key using nanoid\n      var generatedURL = \"http://127.0.0.1:5000/\" + generatedKey; // Construct the shortened URL\n\n      if (this.state.preferedAlias !== '') {\n        generatedKey = this.state.preferedAlias; // Use the user's preferred alias as the key\n        generatedURL = \"http://127.0.0.1:5000/\" + this.state.preferedAlias; // Construct the shortened URL using the preferred alias\n      }\n\n      const db = getDatabase(); // Get a reference to the Firebase database\n\n      set(ref(db, '/' + generatedKey), {\n        // Write data to Firebase under the generated key\n\n        generatedKey: generatedKey,\n        longURL: this.state.longURL,\n        preferedAlias: this.state.preferedAlias,\n        generatedURL: generatedURL\n      }).then(result => {\n        this.setState({\n          generatedURL: generatedURL,\n          // Update state with the new shortened URL\n          loading: false // Set loading flag to false after processing is complete\n        });\n      }).catch(e => {});\n    };\n    // Method to check if a field has an error\n    this.hasError = key => {\n      return this.state.errors.indexOf(key) !== -1; // Check if the key exists in the errors array\n    };\n    // Method to handle changes in form fields\n    this.handleChange = e => {\n      const {\n        id,\n        value\n      } = e.target;\n      this.setState(prevState => ({\n        ...prevState,\n        [id]: value // Update state with the new value of the field that was changed\n      }));\n    };\n    this.validateInput = async () => {\n      var errors = [];\n      var errorMessages = this.state.errorMessage;\n      if (this.state.longURL.length === 0) {\n        errors.push(\"longURL\");\n        errorMessages['longURL'] = 'Please enter your URL!';\n      } else if (!isWebUri(this.state.longURL)) {\n        errors.push(\"longURL\");\n        errorMessages['longURL'] = 'Please a URL in the form of https://www....';\n      }\n      if (this.state.preferedAlias !== '') {\n        if (this.state.preferedAlias.length > 7) {\n          errors.push(\"suggestedAlias\");\n          errorMessages['suggestedAlias'] = 'Please Enter an Alias less than 7 Characters';\n        } else if (this.state.preferedAlias.indexOf(' ') >= 0) {\n          errors.push(\"suggestedAlias\");\n          errorMessages['suggestedAlias'] = 'Spaces are not allowed in URLS';\n        }\n        var keyExists = await this.checkKeyExists();\n        if (keyExists.exists()) {\n          errors.push(\"suggestedAlias\");\n          errorMessages['suggestedAlias'] = 'The Alias you have entered already exists! Please enter another one =-)';\n        }\n      }\n      this.setState({\n        errors: errors,\n        errorMessages: errorMessages,\n        loading: false\n      });\n      if (errors.length > 0) {\n        return false;\n      }\n      return true;\n    };\n    this.checkKeyExists = async () => {\n      const dbRef = ref(getDatabase());\n      return get(child(dbRef, `/${this.state.preferedAlias}`)).catch(error => {\n        return false;\n      });\n    };\n    // Method to copy the generated URL to the clipboard\n    this.copyToClipBoard = () => {\n      navigator.clipboard.writeText(this.state.generatedURL); // Write the generated URL to the clipboard\n      this.setState({\n        toolTipMessage: 'Copied!' // Update the tooltip message to indicate success\n      });\n    };\n    this.state = {\n      longURL: '',\n      // The original URL to be shortened\n      preferedAlias: '',\n      // The user's preferred alias for the shortened URL\n      generatedURL: '',\n      // The resulting shortened URL\n      loading: false,\n      // A flag to indicate whether a request is in progress\n      errors: [],\n      // An array to hold any validation errors\n      errorMessage: {},\n      // An object to hold error messages for display\n      toolTipMessage: 'Copy To Clip Board' // Tooltip message for the copy button\n    };\n  }\n\n  // Method to render the component\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Mini Link It!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Enter Your Long URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"longURL\",\n            onChange: this.handleChange // Call handleChange method when the input changes\n            ,\n            value: this.state.longURL // The current value of the longURL state\n            ,\n            type: \"url\",\n            required: true,\n            className: this.hasError(\"longURL\") // Add 'is-invalid' class if there's an error with longURL\n            ? \"form-control is-invalid\" : \"form-control\",\n            placeholder: \"https://www...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.hasError(\"longURL\") ? \"text-danger\" : \"visually-hidden\" // Show error message if there's an error with longURL\n          ,\n          children: this.state.errorMessage.longURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"button\",\n          onClick: this.onSubmit,\n          children: this.state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"spinner-border spinner-border-sm\",\n              role: \"status\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 33\n            }, this), \" // Show a spinner while loading\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"visually-hidden spinner-border spinner-border-sm\",\n              role: \"status\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Mini Link It\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }, this),\n        // Check if a shortened URL has been generated\n        this.state.generatedURL === '' ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this) // If not, render an empty div\n        : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generatedurl\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Your generated URL is: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              disabled: true,\n              type: \"text\",\n              value: this.state.generatedURL,\n              className: \"form-control\",\n              placeholder: \"Recipient's username\",\n              \"aria-label\": \"Recipient's username\",\n              \"aria-describedby\": \"basic-addon2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group-append\",\n              children: /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n                placement: 'top',\n                overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n                  id: `tooltip-${'top'}`,\n                  children: this.state.toolTipMessage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 49\n                }, this),\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => this.copyToClipBoard(),\n                  \"data-toggle\": \"tooltip\",\n                  \"data-placement\": \"top\",\n                  title: \"Tooltip on top\",\n                  className: \"btn btn-outline-secondary\",\n                  type: \"button\",\n                  children: \"Copy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 45\n                }, this)\n              }, 'top', false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default Form;","map":{"version":3,"names":["React","nanoid","getDatabase","child","ref","set","get","isWebUri","OverlayTrigger","Tooltip","jsxDEV","_jsxDEV","Form","Component","constructor","props","onSubmit","event","preventDefault","setState","loading","generatedURL","isFormValid","validateInput","generatedKey","state","preferedAlias","db","longURL","then","result","catch","e","hasError","key","errors","indexOf","handleChange","id","value","target","prevState","errorMessages","errorMessage","length","push","keyExists","checkKeyExists","exists","dbRef","error","copyToClipBoard","navigator","clipboard","writeText","toolTipMessage","render","className","children","autoComplete","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","required","placeholder","onClick","role","disabled","placement","overlay","title"],"sources":["C:/Users/Chris/Documents/GitHub/url-shortener/url-shortener/src/components/Form.js"],"sourcesContent":["import React from \"react\";\r\nimport { nanoid } from 'nanoid'\r\nimport { getDatabase, child, ref, set, get } from \"firebase/database\";\r\nimport { isWebUri } from 'valid-url';\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\n\r\n// Define the Form component\r\nclass Form extends React.Component {\r\n\r\n    // Initialize state and bind methods in the constructor\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            longURL: '', // The original URL to be shortened\r\n            preferedAlias: '', // The user's preferred alias for the shortened URL\r\n            generatedURL: '', // The resulting shortened URL\r\n            loading: false, // A flag to indicate whether a request is in progress\r\n            errors: [], // An array to hold any validation errors\r\n            errorMessage: {}, // An object to hold error messages for display\r\n            toolTipMessage: 'Copy To Clip Board' // Tooltip message for the copy button\r\n        };\r\n    }\r\n\r\n    // Method to handle form submission\r\n    onSubmit = async (event) => {\r\n        event.preventDefault(); // Prevents the page from reloading when submit is clicked\r\n\r\n        this.setState({\r\n            loading: true, // Set loading flag to true while processing\r\n            generatedURL: '' // Clear any previously generated URL\r\n        })\r\n\r\n        // Validate the input the user has submitted\r\n        var isFormValid = await this.validateInput()\r\n        if (!isFormValid) {\r\n            return // If validation fails, exit the method\r\n        }\r\n\r\n        // If the user has input a preferred alias then we use it, if not, we generate one\r\n        var generatedKey = nanoid(5); // Generate a random key using nanoid\r\n        var generatedURL = \"http://127.0.0.1:5000/\" + generatedKey // Construct the shortened URL\r\n\r\n        if (this.state.preferedAlias !== '') {\r\n            generatedKey = this.state.preferedAlias // Use the user's preferred alias as the key\r\n            generatedURL = \"http://127.0.0.1:5000/\" + this.state.preferedAlias // Construct the shortened URL using the preferred alias\r\n        }\r\n\r\n        const db = getDatabase(); // Get a reference to the Firebase database\r\n\r\n        set(ref(db, '/' + generatedKey), { // Write data to Firebase under the generated key\r\n\r\n            generatedKey: generatedKey,\r\n            longURL: this.state.longURL,\r\n            preferedAlias: this.state.preferedAlias,\r\n            generatedURL: generatedURL\r\n\r\n        }).then((result) => {\r\n            this.setState({\r\n                generatedURL: generatedURL, // Update state with the new shortened URL\r\n                loading: false // Set loading flag to false after processing is complete\r\n            })\r\n        }).catch((e) => {\r\n\r\n        })\r\n    };\r\n\r\n    // Method to check if a field has an error\r\n    hasError = (key) => {\r\n        return this.state.errors.indexOf(key) !== -1; // Check if the key exists in the errors array\r\n    }\r\n\r\n    // Method to handle changes in form fields\r\n    handleChange = (e) => {\r\n        const { id, value } = e.target \r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            [id]: value  // Update state with the new value of the field that was changed\r\n        }))\r\n    }\r\n\r\n    validateInput = async () => {\r\n        var errors = [];\r\n        var errorMessages = this.state.errorMessage\r\n\r\n        if (this.state.longURL.length === 0) {\r\n            errors.push(\"longURL\");\r\n            errorMessages['longURL'] = 'Please enter your URL!';\r\n        } else if (!isWebUri(this.state.longURL)) {\r\n            errors.push(\"longURL\");\r\n            errorMessages['longURL'] = 'Please a URL in the form of https://www....';\r\n        }\r\n\r\n        if (this.state.preferedAlias !== '') {\r\n            if (this.state.preferedAlias.length > 7) {\r\n                errors.push(\"suggestedAlias\");\r\n                errorMessages['suggestedAlias'] = 'Please Enter an Alias less than 7 Characters';\r\n            } else if (this.state.preferedAlias.indexOf(' ') >= 0) {\r\n                errors.push(\"suggestedAlias\");\r\n                errorMessages['suggestedAlias'] = 'Spaces are not allowed in URLS';\r\n            }\r\n\r\n            var keyExists = await this.checkKeyExists()\r\n\r\n            if (keyExists.exists()) {\r\n                errors.push(\"suggestedAlias\");\r\n                errorMessages['suggestedAlias'] = 'The Alias you have entered already exists! Please enter another one =-)';\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            errors: errors,\r\n            errorMessages: errorMessages,\r\n            loading: false\r\n        });\r\n\r\n        if (errors.length > 0) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    checkKeyExists = async () => {\r\n        const dbRef = ref(getDatabase());\r\n        return get(child(dbRef, `/${this.state.preferedAlias}`)).catch((error) => {\r\n            return false\r\n        });\r\n    }\r\n// Method to copy the generated URL to the clipboard\r\ncopyToClipBoard = () => {\r\n    navigator.clipboard.writeText(this.state.generatedURL) // Write the generated URL to the clipboard\r\n    this.setState({\r\n        toolTipMessage: 'Copied!' // Update the tooltip message to indicate success\r\n    })\r\n}\r\n\r\n// Method to render the component\r\nrender() {\r\n    return (\r\n        <div className=\"container\">\r\n            <form autoComplete=\"off\">\r\n                <h3>Mini Link It!</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Enter Your Long URL</label>\r\n                    <input\r\n                        id=\"longURL\"\r\n                        onChange={this.handleChange} // Call handleChange method when the input changes\r\n                        value={this.state.longURL} // The current value of the longURL state\r\n                        type=\"url\"\r\n                        required\r\n                        className={\r\n                            this.hasError(\"longURL\") // Add 'is-invalid' class if there's an error with longURL\r\n                                ? \"form-control is-invalid\"\r\n                                : \"form-control\"\r\n                        }\r\n                        placeholder=\"https://www...\"\r\n                    />\r\n                </div>\r\n                <div\r\n                    className={\r\n                        this.hasError(\"longURL\") ? \"text-danger\" : \"visually-hidden\" // Show error message if there's an error with longURL\r\n                    }\r\n                >\r\n                    {this.state.errorMessage.longURL}\r\n                </div>\r\n\r\n                <button className=\"btn btn-primary\" type=\"button\" onClick={this.onSubmit}>\r\n                    {\r\n                        this.state.loading ?\r\n                            <div>\r\n                                <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> // Show a spinner while loading\r\n                            </div> :\r\n                            <div>\r\n                                <span className=\"visually-hidden spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                <span>Mini Link It</span>\r\n                            </div>\r\n                    }\r\n\r\n                </button>\r\n\r\n                {\r\n                    // Check if a shortened URL has been generated\r\n                    this.state.generatedURL === '' ?\r\n                        <div></div> // If not, render an empty div\r\n                        :\r\n                        <div className=\"generatedurl\">\r\n                            <span>Your generated URL is: </span>\r\n                            <div className=\"input-group mb-3\">\r\n                                <input disabled type=\"text\" value={this.state.generatedURL} className=\"form-control\" placeholder=\"Recipient's username\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" />\r\n                                    <div className=\"input-group-append\">\r\n                                        <OverlayTrigger\r\n                                            key={'top'}\r\n                                            placement={'top'}\r\n                                            overlay={\r\n                                                <Tooltip id={`tooltip-${'top'}`}>\r\n                                                    {this.state.toolTipMessage}\r\n                                                </Tooltip>\r\n                                            }\r\n                                        >\r\n                                            <button onClick={() => this.copyToClipBoard()} data-toggle=\"tooltip\" data-placement=\"top\" title=\"Tooltip on top\" className=\"btn btn-outline-secondary\" type=\"button\">Copy</button>\r\n\r\n                                        </OverlayTrigger>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                    }\r\n\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,QAAQ;AAC/B,SAASC,WAAW,EAAEC,KAAK,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,QAAQ,mBAAmB;AACrE,SAASC,QAAQ,QAAQ,WAAW;AACpC,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,OAAO,MAAM,yBAAyB;;AAE7C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,IAAI,SAASZ,KAAK,CAACa,SAAS,CAAC;EAE/B;EACAC,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAYhB;IAAA,KACAC,QAAQ,GAAG,MAAOC,KAAK,IAAK;MACxBA,KAAK,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;;MAExB,IAAI,CAACC,QAAQ,CAAC;QACVC,OAAO,EAAE,IAAI;QAAE;QACfC,YAAY,EAAE,EAAE,CAAC;MACrB,CAAC,CAAC;;MAEF;MACA,IAAIC,WAAW,GAAG,MAAM,IAAI,CAACC,aAAa,CAAC,CAAC;MAC5C,IAAI,CAACD,WAAW,EAAE;QACd,OAAM,CAAC;MACX;;MAEA;MACA,IAAIE,YAAY,GAAGvB,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9B,IAAIoB,YAAY,GAAG,wBAAwB,GAAGG,YAAY,EAAC;;MAE3D,IAAI,IAAI,CAACC,KAAK,CAACC,aAAa,KAAK,EAAE,EAAE;QACjCF,YAAY,GAAG,IAAI,CAACC,KAAK,CAACC,aAAa,EAAC;QACxCL,YAAY,GAAG,wBAAwB,GAAG,IAAI,CAACI,KAAK,CAACC,aAAa,EAAC;MACvE;;MAEA,MAAMC,EAAE,GAAGzB,WAAW,CAAC,CAAC,CAAC,CAAC;;MAE1BG,GAAG,CAACD,GAAG,CAACuB,EAAE,EAAE,GAAG,GAAGH,YAAY,CAAC,EAAE;QAAE;;QAE/BA,YAAY,EAAEA,YAAY;QAC1BI,OAAO,EAAE,IAAI,CAACH,KAAK,CAACG,OAAO;QAC3BF,aAAa,EAAE,IAAI,CAACD,KAAK,CAACC,aAAa;QACvCL,YAAY,EAAEA;MAElB,CAAC,CAAC,CAACQ,IAAI,CAAEC,MAAM,IAAK;QAChB,IAAI,CAACX,QAAQ,CAAC;UACVE,YAAY,EAAEA,YAAY;UAAE;UAC5BD,OAAO,EAAE,KAAK,CAAC;QACnB,CAAC,CAAC;MACN,CAAC,CAAC,CAACW,KAAK,CAAEC,CAAC,IAAK,CAEhB,CAAC,CAAC;IACN,CAAC;IAED;IAAA,KACAC,QAAQ,GAAIC,GAAG,IAAK;MAChB,OAAO,IAAI,CAACT,KAAK,CAACU,MAAM,CAACC,OAAO,CAACF,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAClD,CAAC;IAED;IAAA,KACAG,YAAY,GAAIL,CAAC,IAAK;MAClB,MAAM;QAAEM,EAAE;QAAEC;MAAM,CAAC,GAAGP,CAAC,CAACQ,MAAM;MAC9B,IAAI,CAACrB,QAAQ,CAACsB,SAAS,KAAK;QACxB,GAAGA,SAAS;QACZ,CAACH,EAAE,GAAGC,KAAK,CAAE;MACjB,CAAC,CAAC,CAAC;IACP,CAAC;IAAA,KAEDhB,aAAa,GAAG,YAAY;MACxB,IAAIY,MAAM,GAAG,EAAE;MACf,IAAIO,aAAa,GAAG,IAAI,CAACjB,KAAK,CAACkB,YAAY;MAE3C,IAAI,IAAI,CAAClB,KAAK,CAACG,OAAO,CAACgB,MAAM,KAAK,CAAC,EAAE;QACjCT,MAAM,CAACU,IAAI,CAAC,SAAS,CAAC;QACtBH,aAAa,CAAC,SAAS,CAAC,GAAG,wBAAwB;MACvD,CAAC,MAAM,IAAI,CAACnC,QAAQ,CAAC,IAAI,CAACkB,KAAK,CAACG,OAAO,CAAC,EAAE;QACtCO,MAAM,CAACU,IAAI,CAAC,SAAS,CAAC;QACtBH,aAAa,CAAC,SAAS,CAAC,GAAG,6CAA6C;MAC5E;MAEA,IAAI,IAAI,CAACjB,KAAK,CAACC,aAAa,KAAK,EAAE,EAAE;QACjC,IAAI,IAAI,CAACD,KAAK,CAACC,aAAa,CAACkB,MAAM,GAAG,CAAC,EAAE;UACrCT,MAAM,CAACU,IAAI,CAAC,gBAAgB,CAAC;UAC7BH,aAAa,CAAC,gBAAgB,CAAC,GAAG,8CAA8C;QACpF,CAAC,MAAM,IAAI,IAAI,CAACjB,KAAK,CAACC,aAAa,CAACU,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;UACnDD,MAAM,CAACU,IAAI,CAAC,gBAAgB,CAAC;UAC7BH,aAAa,CAAC,gBAAgB,CAAC,GAAG,gCAAgC;QACtE;QAEA,IAAII,SAAS,GAAG,MAAM,IAAI,CAACC,cAAc,CAAC,CAAC;QAE3C,IAAID,SAAS,CAACE,MAAM,CAAC,CAAC,EAAE;UACpBb,MAAM,CAACU,IAAI,CAAC,gBAAgB,CAAC;UAC7BH,aAAa,CAAC,gBAAgB,CAAC,GAAG,yEAAyE;QAC/G;MACJ;MAEA,IAAI,CAACvB,QAAQ,CAAC;QACVgB,MAAM,EAAEA,MAAM;QACdO,aAAa,EAAEA,aAAa;QAC5BtB,OAAO,EAAE;MACb,CAAC,CAAC;MAEF,IAAIe,MAAM,CAACS,MAAM,GAAG,CAAC,EAAE;QACnB,OAAO,KAAK;MAChB;MAEA,OAAO,IAAI;IACf,CAAC;IAAA,KAGDG,cAAc,GAAG,YAAY;MACzB,MAAME,KAAK,GAAG7C,GAAG,CAACF,WAAW,CAAC,CAAC,CAAC;MAChC,OAAOI,GAAG,CAACH,KAAK,CAAC8C,KAAK,EAAG,IAAG,IAAI,CAACxB,KAAK,CAACC,aAAc,EAAC,CAAC,CAAC,CAACK,KAAK,CAAEmB,KAAK,IAAK;QACtE,OAAO,KAAK;MAChB,CAAC,CAAC;IACN,CAAC;IACL;IAAA,KACAC,eAAe,GAAG,MAAM;MACpBC,SAAS,CAACC,SAAS,CAACC,SAAS,CAAC,IAAI,CAAC7B,KAAK,CAACJ,YAAY,CAAC,EAAC;MACvD,IAAI,CAACF,QAAQ,CAAC;QACVoC,cAAc,EAAE,SAAS,CAAC;MAC9B,CAAC,CAAC;IACN,CAAC;IA3HO,IAAI,CAAC9B,KAAK,GAAG;MACTG,OAAO,EAAE,EAAE;MAAE;MACbF,aAAa,EAAE,EAAE;MAAE;MACnBL,YAAY,EAAE,EAAE;MAAE;MAClBD,OAAO,EAAE,KAAK;MAAE;MAChBe,MAAM,EAAE,EAAE;MAAE;MACZQ,YAAY,EAAE,CAAC,CAAC;MAAE;MAClBY,cAAc,EAAE,oBAAoB,CAAC;IACzC,CAAC;EACL;;EAoHJ;EACAC,MAAMA,CAAA,EAAG;IACL,oBACI7C,OAAA;MAAK8C,SAAS,EAAC,WAAW;MAAAC,QAAA,eACtB/C,OAAA;QAAMgD,YAAY,EAAC,KAAK;QAAAD,QAAA,gBACpB/C,OAAA;UAAA+C,QAAA,EAAI;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAEtBpD,OAAA;UAAK8C,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACvB/C,OAAA;YAAA+C,QAAA,EAAO;UAAmB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAClCpD,OAAA;YACI2B,EAAE,EAAC,SAAS;YACZ0B,QAAQ,EAAE,IAAI,CAAC3B,YAAa,CAAC;YAAA;YAC7BE,KAAK,EAAE,IAAI,CAACd,KAAK,CAACG,OAAQ,CAAC;YAAA;YAC3BqC,IAAI,EAAC,KAAK;YACVC,QAAQ;YACRT,SAAS,EACL,IAAI,CAACxB,QAAQ,CAAC,SAAS,CAAC,CAAC;YAAA,EACnB,yBAAyB,GACzB,cACT;YACDkC,WAAW,EAAC;UAAgB;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNpD,OAAA;UACI8C,SAAS,EACL,IAAI,CAACxB,QAAQ,CAAC,SAAS,CAAC,GAAG,aAAa,GAAG,iBAAiB,CAAC;UAChE;UAAAyB,QAAA,EAEA,IAAI,CAACjC,KAAK,CAACkB,YAAY,CAACf;QAAO;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC,eAENpD,OAAA;UAAQ8C,SAAS,EAAC,iBAAiB;UAACQ,IAAI,EAAC,QAAQ;UAACG,OAAO,EAAE,IAAI,CAACpD,QAAS;UAAA0C,QAAA,EAEjE,IAAI,CAACjC,KAAK,CAACL,OAAO,gBACdT,OAAA;YAAA+C,QAAA,gBACI/C,OAAA;cAAM8C,SAAS,EAAC,kCAAkC;cAACY,IAAI,EAAC,QAAQ;cAAC,eAAY;YAAM;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,oCAC/F;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,gBACNpD,OAAA;YAAA+C,QAAA,gBACI/C,OAAA;cAAM8C,SAAS,EAAC,kDAAkD;cAACY,IAAI,EAAC,QAAQ;cAAC,eAAY;YAAM;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC3GpD,OAAA;cAAA+C,QAAA,EAAM;YAAY;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CAAC;QAGL;QACA,IAAI,CAACtC,KAAK,CAACJ,YAAY,KAAK,EAAE,gBAC1BV,OAAA;UAAAiD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC,CAAC;QAAA,eAEZpD,OAAA;UAAK8C,SAAS,EAAC,cAAc;UAAAC,QAAA,gBACzB/C,OAAA;YAAA+C,QAAA,EAAM;UAAuB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACpCpD,OAAA;YAAK8C,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC7B/C,OAAA;cAAO2D,QAAQ;cAACL,IAAI,EAAC,MAAM;cAAC1B,KAAK,EAAE,IAAI,CAACd,KAAK,CAACJ,YAAa;cAACoC,SAAS,EAAC,cAAc;cAACU,WAAW,EAAC,sBAAsB;cAAC,cAAW,sBAAsB;cAAC,oBAAiB;YAAc;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACxLpD,OAAA;cAAK8C,SAAS,EAAC,oBAAoB;cAAAC,QAAA,eAC/B/C,OAAA,CAACH,cAAc;gBAEX+D,SAAS,EAAE,KAAM;gBACjBC,OAAO,eACH7D,OAAA,CAACF,OAAO;kBAAC6B,EAAE,EAAG,WAAU,KAAM,EAAE;kBAAAoB,QAAA,EAC3B,IAAI,CAACjC,KAAK,CAAC8B;gBAAc;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACrB,CACZ;gBAAAL,QAAA,eAED/C,OAAA;kBAAQyD,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACjB,eAAe,CAAC,CAAE;kBAAC,eAAY,SAAS;kBAAC,kBAAe,KAAK;kBAACsB,KAAK,EAAC,gBAAgB;kBAAChB,SAAS,EAAC,2BAA2B;kBAACQ,IAAI,EAAC,QAAQ;kBAAAP,QAAA,EAAC;gBAAI;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ;cAAC,GAR7K,KAAK;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAUE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEhB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEd;AACJ;AAEA,eAAenD,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}